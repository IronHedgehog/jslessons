const users = ["Artem", "Vadim", "Petro"];
const clients = ["Illa", "Vova"];

// додає вказаний елемент в кінець масиву.Повертає довжину масиву після додавання елементів.
users.push("b");
// видаляє та повертає останній елемент масиву. Якщо масив порожній, метод повертає undefined
users.pop();
// додає вказаний елемент на початку масиву(першим елементом)
users.unshift("0");
// видаляє перший елемент масиву
users.shift();

// Метод join винімає з масиву примітиви та поєднує їх за вказаним розділювачем ("", " ")
// console.log("users :>> ", users.join(" "));

// Метод split додає до масиву примітиви та роз'єднує їх за вказаним розділювачем ("", " ")
// const message = "Ваше замовлення успішно створено";

// console.log("object :>> ", message.split(" "));

// Метод indexOf повертає індекс елементу який ви шукаєте або повертає -1 якщо нічого не знайшов

// console.log(users.indexOf("illa"));

// Метод includes повертає бульове значення(true,false), таким чином відповідаючи на питання чи є даний елемент
// у масиві

// const user = "asdasd";

// console.log("users :>> ", users.includes(user));

// Метод slice дозволяє копіювати масив (варто використовувати при самостійній роботі) параметрами маємо вказати
//  початок та кінець відрізу за елементами, якщо хочемо працювати з кінця масиву задаємо від'ємні значення

// const clientss = users.slice(-1);

// console.log("clients :>> ", clients);

// Метод splice видаляє, додає та змінює елементи,першим параметром передається індекс елементу з якого почати видалення
// другим параметром приймає значення скільки видаляти, усі інші вказані параметри підставляться замість видалених елементів
// users.splice(1, 1, "Illa", "Vova");

// console.log("users :>> ", users);


// Метод concat дозволяє поєднувати декілька масивів в один,масив данних який ви доєднуєте,доєднується в кінець
const bothArray = clients.concat(users);

console.log("bothArray :>> ", bothArray);
